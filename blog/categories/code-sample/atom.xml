<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: code sample | Andy Lind]]></title>
  <link href="http://andylind.github.com/blog/categories/code-sample/atom.xml" rel="self"/>
  <link href="http://andylind.github.com/"/>
  <updated>2012-10-07T15:27:59-05:00</updated>
  <id>http://andylind.github.com/</id>
  <author>
    <name><![CDATA[Andy Lind]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Simple vi Tutorial]]></title>
    <link href="http://andylind.github.com/blog/2012/10/12/simple-vi-tutorial/"/>
    <updated>2012-10-12T14:27:00-05:00</updated>
    <id>http://andylind.github.com/blog/2012/10/12/simple-vi-tutorial</id>
    <content type="html"><![CDATA[<p>One thing I have always struggled with is using vi. I spend most of my time programming in an IDE or in a text editor like notepad++ or gedit. When I ssh into a machine though, it is usually most convenient to use a command window for text editing. I decided recently that I need to make sure that I understand the most basic vi commands, so that I can edit text on any *nix machine.</p>

<p>The first step for me was learning just a few basic vi commands so that I would have enough knowledge to edit files. Below is the most minimal set of commands that you need to know to operate vi.</p>

<p>The key concept you have to learn is that vi has two modes. Insert mode and command mode. When vi is opened, it will start in command mode by default. This mode allows you to do things like run complex editing commands, save the file, and exit. Pressing "i" will take you to inset mode. Insert mode allows you to edit text that is in the file. Pressing esc will return to command mode.</p>

<p>It can be confusing at first to understand which mode you are in. If you want to be safe, you can always press "esc" and guarantee that you are in command mode.</p>

<pre>
#open vi
vi filename.txt

#switch to insert mode
i

#switch to command mode
esc

#save a file
:w

#exit vi
:q
</pre>


<p>If you are looking to learn more, here is a helpful cheatsheet showing many common commands: <a href="http://media.smashingmagazine.com/wp-content/uploads/2010/05/VI-Help-Sheet-01-large2.jpg">vi cheatsheet from smashingmagazine</a></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[My Most Used Linux Commands]]></title>
    <link href="http://andylind.github.com/blog/2012/09/07/my-most-used-linux-commands/"/>
    <updated>2012-09-07T13:28:00-05:00</updated>
    <id>http://andylind.github.com/blog/2012/09/07/my-most-used-linux-commands</id>
    <content type="html"><![CDATA[<p>The commands below make up about 90% of what I do on a Linux system. Most of what I do from the command line involves ssh'ing into a server, searching through log files, checking on processes, and editing configuration files. Since I am not doing most of my development work directly on a Linux box, I often find myself forgetting how to do certain tasks, or not knowing how to do something on a specific server. I put together the small guide below with commands that are available on almost any Linux system. By learning these few commands, I have been able to navigate around and get what I need done in almost any Linux environment.</p>

<pre>
#Login to a remote server
ssh [-p port] [username@hostname]
</pre>




<pre>
#List files in a directory with file information
ls -l
</pre>




<pre>
#See every process running on a system
ps aux
</pre>




<pre>
#Print the last 100 lines of a file
tail -100 [filename]
</pre>




<pre>
#Watch a log file as it grows
tail -f [filename]
</pre>




<pre>
#Look for a pattern in a file
grep [pattern] [file]
</pre>




<pre>
#Run an HTTP GET request to a url
curl [url]
</pre>




<pre>
#Change file permissions to read/write for all
chmod a+rw [filename]
</pre>


<p>Here is an example of a common way that I might chain commands together:</p>

<pre>
#Look in the last 1000 lines of a file for lines starting with ERROR
#and print out the matching lines and the 5 lines above and below
tail -1000 logs/logfile.txt | grep ^ERROR -A 5 -B 5
</pre>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Using Git with SVN]]></title>
    <link href="http://andylind.github.com/blog/2012/05/11/Using-Git-With-SVN/"/>
    <updated>2012-05-11T11:38:00-05:00</updated>
    <id>http://andylind.github.com/blog/2012/05/11/Using-Git-With-SVN</id>
    <content type="html"><![CDATA[<p>Here is my workflow for using Git with SVN:</p>

<p><div><script src='https://gist.github.com/2655799.js?file='></script>
<noscript><pre><code>//create local repo
git svn init -s http://url-of-repo
git svn fetch
git svn rebase

//work on a local branch or branches
git checkout -b myfeature

//make some changes and commit
git commit -a -m &quot;made some changes&quot;

//switch to master and rebase changes 
git checkout master
git rebase myfeature
git svn rebase

//see differences between local and svn trunk
git diff remotes/trunk

//commit changes to svn
git svn dcommit</code></pre></noscript></div>
</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[An Example Cross Domain AJAX Request]]></title>
    <link href="http://andylind.github.com/blog/2011/06/15/an-example-cross-domain-ajax-request/"/>
    <updated>2011-06-15T00:44:00-05:00</updated>
    <id>http://andylind.github.com/blog/2011/06/15/an-example-cross-domain-ajax-request</id>
    <content type="html"><![CDATA[<p>Cross Domain AJAX calls can be made by using JSONP.</p>

<p>Here is an example using the Twitter api:</p>

<p><div><script src='https://gist.github.com/965715.js?file='></script>
<noscript><pre><code>&lt;!DOCTYPE html&gt;
&lt;html&gt;
  &lt;head&gt;
    &lt;meta http-equiv=&quot;Content-Type&quot; content=&quot;text/html; charset=iso-8859-1&quot; /&gt;
    &lt;title&gt;jQuery cross domain ajax example&lt;/title&gt;
    &lt;script type=&quot;text/javascript&quot; 
            src=&quot;http://ajax.googleapis.com/ajax/libs/jquery/1.5.2/jquery.min.js&quot;&gt;
    &lt;/script&gt;
    &lt;script type=&quot;text/javascript&quot;&gt;
	    $(document).ready(function() {
                $.getJSON('http://api.twitter.com/1/trends/1.json?callback=?',
                    function(json){      
                        $('#mydiv').text(json[0].trends[0].name); 
                    }
                );
            });
    &lt;/script&gt;
  &lt;/head&gt;
  &lt;body&gt;
    &lt;h3&gt;Top Twitter Trend:&lt;/h3&gt;
    &lt;div id=&quot;mydiv&quot;&gt;Loading...&lt;/div&gt;
  &lt;/body&gt;
&lt;/html&gt;</code></pre></noscript></div>
</p>
]]></content>
  </entry>
  
</feed>
